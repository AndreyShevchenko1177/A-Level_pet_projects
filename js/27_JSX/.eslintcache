[{"C:\\WORK_homework\\js\\27_JSX\\src\\index.js":"1","C:\\WORK_homework\\js\\27_JSX\\src\\reportWebVitals.js":"2","C:\\WORK_homework\\js\\27_JSX\\src\\App.js":"3","C:\\WORK_homework\\js\\27_JSX\\src\\modules\\Spoiler.js":"4","C:\\WORK_homework\\js\\27_JSX\\src\\modules\\PasswordConfirm.js":"5","C:\\WORK_homework\\js\\27_JSX\\src\\modules\\Timer.js":"6","C:\\WORK_homework\\js\\27_JSX\\src\\modules\\TimerControl.js":"7","C:\\WORK_homework\\js\\27_JSX\\src\\modules\\TimerContainer.js":"8","C:\\WORK_homework\\js\\27_JSX\\src\\modules\\Presentation.js":"9"},{"size":500,"mtime":499162500000,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":499162500000,"results":"12","hashOfConfig":"11"},{"size":12525,"mtime":1612480672244,"results":"13","hashOfConfig":"11"},{"size":2544,"mtime":1612479525922,"results":"14","hashOfConfig":"11"},{"size":3152,"mtime":1612479706790,"results":"15","hashOfConfig":"11"},{"size":1594,"mtime":1612479814567,"results":"16","hashOfConfig":"11"},{"size":2028,"mtime":1612480131175,"results":"17","hashOfConfig":"11"},{"size":1421,"mtime":1612480219468,"results":"18","hashOfConfig":"11"},{"size":1615,"mtime":1612480566234,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"13kesu2",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\WORK_homework\\js\\27_JSX\\src\\index.js",[],["44","45"],"C:\\WORK_homework\\js\\27_JSX\\src\\reportWebVitals.js",[],"C:\\WORK_homework\\js\\27_JSX\\src\\App.js",[],"C:\\WORK_homework\\js\\27_JSX\\src\\modules\\Spoiler.js",["46","47","48"],"import React, { Component, useEffect, useState, useRef } from \"react\";\r\n\r\nexport const Spoiler = ({ header = \"--no header--\", open, children }) => {\r\n    const [show, setShow] = useState(open);\r\n\r\n    return (\r\n        <div style={{ border: \"2px solid green\" }}>\r\n            <h1\r\n                style={{ cursor: \"pointer\" }}\r\n                onClick={() => {\r\n                    setShow(!show);\r\n                }}\r\n            >\r\n                {header}\r\n                <span\r\n                    style={{ fontSize: \".5em\" }}\r\n                >{` ({shou}===${show})`}</span>\r\n            </h1>\r\n\r\n            {/* {show && (\r\n                <div style={{ border: \"2px solid red\" }}>\r\n                    {children}\r\n                    {<b>Этот контент помирает</b>}\r\n                </div>\r\n            )} */}\r\n\r\n            {/* // если убивать контент (как сверху) - то счетчики помирают */}\r\n            {/* // вместо этого будем скрывать контент (как сделано ниже) */}\r\n\r\n            {\r\n                <div\r\n                    style={{\r\n                        border: \"2px solid red\",\r\n                        display: show ? \"\" : \"none\",\r\n                    }}\r\n                >\r\n                    {children}\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport const ButtonCounter = ({ KOGOMALUVATY }) => {\r\n    const [counter, setCounter] = useState(0);\r\n\r\n    return (\r\n        <button onClick={() => setCounter(counter + 1)}> +1({counter})</button>\r\n    );\r\n};\r\n\r\nexport const LoginForm = ({\r\n    onLogin = null,\r\n    startLog = \"John\",\r\n    startPas = \"Doe\",\r\n}) => {\r\n    const [login, setLogin] = useState(startLog);\r\n    const [password, setPassword] = useState(startPas);\r\n    // console.log(login, password);\r\n\r\n    return (\r\n        <div className=\"LoginForm\">\r\n            <input\r\n                placeholder=\"Login\"\r\n                value={login}\r\n                onChange={(e) => setLogin(e.target.value)}\r\n            />\r\n\r\n            <input\r\n                placeholder=\"Password\"\r\n                type=\"password\"\r\n                value={password}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n            />\r\n\r\n            <button\r\n                disabled={!login || !password}\r\n                onClick={() => onLogin(login, password)}\r\n            >\r\n                Login {login && `as ${login}`}{\" \"}\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n","C:\\WORK_homework\\js\\27_JSX\\src\\modules\\PasswordConfirm.js",["49","50","51"],"import React, { Component, useEffect, useState, useRef } from \"react\";\r\n\r\nexport const RangeInput = ({\r\n    min = 1,\r\n    max = 256,\r\n    minColor = \"lightgrey\",\r\n    maxColor = \"lightgrey\",\r\n}) => {\r\n    // для эксперимента помещу все параметры в стейт (хук), хоть в этом и нет необходимости\r\n    const [inputState, setinputState] = useState({\r\n        min,\r\n        max,\r\n        minColor,\r\n        maxColor,\r\n        value: \"\",\r\n    });\r\n\r\n    // console.log(\"inputState\", inputState);\r\n    let color = \"\";\r\n    if (inputState.value.length < inputState.min) {\r\n        color = inputState.minColor;\r\n    } else if (inputState.value.length > inputState.max) {\r\n        color = inputState.maxColor;\r\n    } else {\r\n        color = \"\";\r\n    }\r\n\r\n    return (\r\n        <input\r\n            style={{ backgroundColor: `${color}` }}\r\n            placeholder={`от ${inputState.min} до ${inputState.max} символов`}\r\n            value={inputState.value}\r\n            onChange={(e) => {\r\n                setinputState({ ...inputState, ...{ value: e.target.value } });\r\n            }}\r\n        ></input>\r\n    );\r\n};\r\n\r\nexport const PasswordConfirm = ({ min = 1, onLogin }) => {\r\n    const [pass1, setPass1] = useState(\"\");\r\n    const [pass2, setPass2] = useState(\"\");\r\n\r\n    // let regexp = /\\d/; //  - хотя бы одна цифра\r\n    // let regexp = /[A-Z]/; //  - хотя бы одна ЗАГЛАВНАЯ буква латинского алфавита\r\n\r\n    let regexp = /(?=.*[0-9])(?=.*[A-Z])(?=.*[a-z]).*/;\r\n\r\n    // (?=^.{6,}$) - Строкa > 5 символов\r\n    // (?=.*[0-9]) - содержит цифру\r\n    // (?=.*[A-Z]) - содержит прописную букву\r\n    // (?=.*[a-z]) - содержит строчную букву\r\n    // (?=.*[^A-Za-z0-9]) - символ не является буквенно-цифровым.\r\n\r\n    // \"Как только программист решает, что сможет решить проблему при помощи regexp,\r\n    // с этого момента у него уже 2 проблемы.\" ©\r\n\r\n    let color1 =\r\n        pass1.length < min || !regexp.test(pass1) ? \"pink\" : \"lightgreen\";\r\n    let color2 = pass2.length < min || pass1 !== pass2 ? \"pink\" : \"lightgreen\";\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                style={{ backgroundColor: color1 }}\r\n                type=\"password\"\r\n                placeholder={`min = ${min}`}\r\n                onChange={(e) => {\r\n                    setPass1(e.target.value);\r\n                }}\r\n            ></input>\r\n            <input\r\n                style={{ backgroundColor: color2 }}\r\n                type=\"password\"\r\n                placeholder={`min = ${min}`}\r\n                onChange={(e) => {\r\n                    setPass2(e.target.value);\r\n                }}\r\n            ></input>\r\n            <button\r\n                disabled={color1 === \"pink\" || color2 === \"pink\"}\r\n                onClick={() => onLogin(pass1, pass2)}\r\n            >\r\n                Confirm\r\n            </button>\r\n        </>\r\n    );\r\n};\r\n","C:\\WORK_homework\\js\\27_JSX\\src\\modules\\Timer.js",["52"],"import React, { Component, useEffect, useState, useRef } from \"react\";\r\n\r\nexport const Timer = ({ sec = 0, startWithPause = true }) => {\r\n    const ifSecIsNan = function (sec) {\r\n        if (isNaN(sec)) return 0;\r\n        return sec;\r\n    };\r\n\r\n    const [timeLeft, setTimeLeft] = useState(ifSecIsNan(sec));\r\n    const [pause, setPause] = useState(startWithPause);\r\n    const clockface = useRef(null);\r\n\r\n    useEffect(() => {\r\n        setTimeLeft(sec);\r\n        setPause(startWithPause);\r\n        // return () => console.log(\"помер\");\r\n    }, [sec, startWithPause]);\r\n\r\n    let h, m, s;\r\n\r\n    h = Math.floor(timeLeft / 3600);\r\n    m = Math.floor((timeLeft - h * 60 * 60) / 60);\r\n    s = timeLeft - h * 60 * 60 - m * 60;\r\n\r\n    if (timeLeft === 0) {\r\n        clockface.current && (clockface.current.style.backgroundColor = \"red\");\r\n        // setTimeout(() => clockface.current.remove(), 5000);\r\n    } else {\r\n        clockface.current &&\r\n            (clockface.current.style.backgroundColor = \"white\");\r\n    }\r\n\r\n    const decTime = () => {\r\n        if (!pause && timeLeft > 0) {\r\n            setTimeLeft(timeLeft - 1);\r\n        }\r\n    };\r\n\r\n    setTimeout(decTime, 1000);\r\n\r\n    return (\r\n        <>\r\n            {/* prettier-ignore */}\r\n            <span ref = {clockface} style={{ border: \"2px solid gray\" }}>\r\n                {`--- ${h}:${m.toString().padStart(2, 0)}:${s.toString().padStart(2, 0)} ---`}\r\n            </span>\r\n            <button onClick={() => setPause(!pause)}>\r\n                {(pause && \"Continue\") || \"Pause\"}\r\n            </button>\r\n        </>\r\n    );\r\n};\r\n","C:\\WORK_homework\\js\\27_JSX\\src\\modules\\TimerControl.js",["53","54"],"import React, { Component, useEffect, useState, useRef } from \"react\";\r\nimport { Timer } from \"./Timer\";\r\n\r\nexport const TimerControl = ({ counter: Counter = Timer, ...props }) => {\r\n    const [totalSec, setTotalSec] = useState(0);\r\n    const input_H_ref = useRef(null);\r\n    const input_M_ref = useRef(null);\r\n    const input_S_ref = useRef(null);\r\n    const [clickCount, setClickCount] = useState(0);\r\n\r\n    const countTotalSec = function () {\r\n        let total =\r\n            (input_H_ref.current.value * 3600 || 0) +\r\n            (input_M_ref.current.value * 60 || 0) +\r\n            (parseInt(input_S_ref.current.value, 10) || 0);\r\n        // interimSec.current = total;\r\n        setTotalSec(total);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                ref={input_H_ref}\r\n                // onInput={countTotalSec}\r\n                placeholder=\"hh\"\r\n                type=\"number\"\r\n                min=\"0\"\r\n            />\r\n            <input\r\n                ref={input_M_ref}\r\n                // onInput={countTotalSec}\r\n                placeholder=\"mm\"\r\n                type=\"number\"\r\n                min=\"0\"\r\n                max=\"59\"\r\n            />\r\n            <input\r\n                ref={input_S_ref}\r\n                // onInput={countTotalSec}\r\n                placeholder=\"ss\"\r\n                type=\"number\"\r\n                min=\"0\"\r\n                max=\"59\"\r\n            />\r\n\r\n            <button\r\n                onClick={() => {\r\n                    countTotalSec();\r\n                    setClickCount((prev) => prev + 1);\r\n                    // setMySwitch(!mySwitch);\r\n                }}\r\n            >\r\n                Start\r\n            </button>\r\n\r\n            {\r\n                <Counter\r\n                    sec={totalSec}\r\n                    seconds={totalSec}\r\n                    startWithPause={false}\r\n                    clickNumber={clickCount}\r\n                    {...props}\r\n                    key={clickCount}\r\n                />\r\n            }\r\n        </>\r\n    );\r\n};\r\n","C:\\WORK_homework\\js\\27_JSX\\src\\modules\\TimerContainer.js",["55","56","57"],"import React, { Component, useEffect, useState, useRef } from \"react\";\r\n\r\nconst SecondsTimer = ({ seconds }) => <h2>{seconds}</h2>;\r\n\r\nexport const TimerContainer = ({\r\n    seconds = 0,\r\n    refresh = 100,\r\n    clickNumber = 0,\r\n    render: Render = SecondsTimer,\r\n}) => {\r\n    const [startMoment, setStartMoment] = useState(performance.now());\r\n    const [timeLeft, setTimeLeft] = useState(seconds);\r\n    const [clickCount, setClickCount] = useState(0);\r\n    const count = useRef(1);\r\n    const intervalId = useRef(null);\r\n\r\n    // console.log(timeLeft, clickCount);\r\n\r\n    const trackTime = () => {\r\n        intervalId.current = setInterval(() => {\r\n            console.log(\"interval\");\r\n            if (timeLeft >= count.current) {\r\n                if ((performance.now() - startMoment) / 1000 > count.current) {\r\n                    count.current++;\r\n                    setTimeLeft((prev) => prev - 1);\r\n                }\r\n            } else clearInterval(intervalId.current);\r\n        }, refresh);\r\n    };\r\n\r\n    useEffect(() => {\r\n        clearInterval(intervalId.current);\r\n        setClickCount(clickNumber);\r\n        setTimeLeft(seconds);\r\n        count.current = 1;\r\n        setStartMoment(performance.now());\r\n        trackTime();\r\n        return () => clearInterval(intervalId.current);\r\n    }, [clickNumber]);\r\n\r\n    return (\r\n        <>\r\n            <Render seconds={timeLeft} />\r\n        </>\r\n    );\r\n};\r\n","C:\\WORK_homework\\js\\27_JSX\\src\\modules\\Presentation.js",["58","59","60","61"],{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","severity":1,"message":"67","line":1,"column":17,"nodeType":"68","messageId":"69","endLine":1,"endColumn":26},{"ruleId":"66","severity":1,"message":"70","line":1,"column":28,"nodeType":"68","messageId":"69","endLine":1,"endColumn":37},{"ruleId":"66","severity":1,"message":"71","line":1,"column":49,"nodeType":"68","messageId":"69","endLine":1,"endColumn":55},{"ruleId":"66","severity":1,"message":"67","line":1,"column":17,"nodeType":"68","messageId":"69","endLine":1,"endColumn":26},{"ruleId":"66","severity":1,"message":"70","line":1,"column":28,"nodeType":"68","messageId":"69","endLine":1,"endColumn":37},{"ruleId":"66","severity":1,"message":"71","line":1,"column":49,"nodeType":"68","messageId":"69","endLine":1,"endColumn":55},{"ruleId":"66","severity":1,"message":"67","line":1,"column":17,"nodeType":"68","messageId":"69","endLine":1,"endColumn":26},{"ruleId":"66","severity":1,"message":"67","line":1,"column":17,"nodeType":"68","messageId":"69","endLine":1,"endColumn":26},{"ruleId":"66","severity":1,"message":"70","line":1,"column":28,"nodeType":"68","messageId":"69","endLine":1,"endColumn":37},{"ruleId":"66","severity":1,"message":"67","line":1,"column":17,"nodeType":"68","messageId":"69","endLine":1,"endColumn":26},{"ruleId":"66","severity":1,"message":"72","line":13,"column":12,"nodeType":"68","messageId":"69","endLine":13,"endColumn":22},{"ruleId":"73","severity":1,"message":"74","line":39,"column":8,"nodeType":"75","endLine":39,"endColumn":21,"suggestions":"76"},{"ruleId":"66","severity":1,"message":"67","line":1,"column":17,"nodeType":"68","messageId":"69","endLine":1,"endColumn":26},{"ruleId":"66","severity":1,"message":"70","line":1,"column":28,"nodeType":"68","messageId":"69","endLine":1,"endColumn":37},{"ruleId":"66","severity":1,"message":"77","line":1,"column":39,"nodeType":"68","messageId":"69","endLine":1,"endColumn":47},{"ruleId":"66","severity":1,"message":"71","line":1,"column":49,"nodeType":"68","messageId":"69","endLine":1,"endColumn":55},"no-native-reassign",["78"],"no-negated-in-lhs",["79"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'useRef' is defined but never used.","'clickCount' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'seconds' and 'trackTime'. Either include them or remove the dependency array. If 'setTimeLeft' needs the current value of 'seconds', you can also switch to useReducer instead of useState and read 'seconds' in the reducer.","ArrayExpression",["80"],"'useState' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"81","fix":"82"},"Update the dependencies array to be: [clickNumber, seconds, trackTime]",{"range":"83","text":"84"},[1308,1321],"[clickNumber, seconds, trackTime]"]